# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .resource_with_etag_py3 import ResourceWithEtag


class Relation(ResourceWithEtag):
    """Represents a relation between two resources.

    Variables are only populated by the server, and will be ignored when
    sending a request.

    All required parameters must be populated in order to send to Azure.

    :ivar id: Azure resource Id
    :vartype id: str
    :ivar name: Azure resource name
    :vartype name: str
    :ivar type: Azure resource type
    :vartype type: str
    :param etag: Etag of the azure resource
    :type etag: str
    :param related_resource_id: Required. The resource ID of the related
     resource
    :type related_resource_id: str
    :ivar related_resource_name: The name of the related resource
    :vartype related_resource_name: str
    :ivar related_resource_type: The resource type of the related resource
    :vartype related_resource_type: str
    :ivar related_resource_kind: The resource kind of the related resource
    :vartype related_resource_kind: str
    """

    _validation = {
        'id': {'readonly': True},
        'name': {'readonly': True},
        'type': {'readonly': True},
        'related_resource_id': {'required': True},
        'related_resource_name': {'readonly': True},
        'related_resource_type': {'readonly': True},
        'related_resource_kind': {'readonly': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'type': {'key': 'type', 'type': 'str'},
        'etag': {'key': 'etag', 'type': 'str'},
        'related_resource_id': {'key': 'properties.relatedResourceId', 'type': 'str'},
        'related_resource_name': {'key': 'properties.relatedResourceName', 'type': 'str'},
        'related_resource_type': {'key': 'properties.relatedResourceType', 'type': 'str'},
        'related_resource_kind': {'key': 'properties.relatedResourceKind', 'type': 'str'},
    }

    def __init__(self, *, related_resource_id: str, etag: str=None, **kwargs) -> None:
        super(Relation, self).__init__(etag=etag, **kwargs)
        self.related_resource_id = related_resource_id
        self.related_resource_name = None
        self.related_resource_type = None
        self.related_resource_kind = None
